import{_ as i,c as s,o as t,ae as e}from"./chunks/framework.DUP9kEI5.js";const c=JSON.parse('{"title":"1. Extracting from Dual-Audio Track Video/Audio Files (Requires Separated Audio Tracks)","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/media-chat-data.md","filePath":"en/guide/media-chat-data.md"}'),n={name:"en/guide/media-chat-data.md"};function l(h,a,d,r,o,p){return t(),s("div",null,a[0]||(a[0]=[e(`<h2 id="extracting-chat-data-from-media-files" tabindex="-1">Extracting Chat Data from Media Files <a class="header-anchor" href="#extracting-chat-data-from-media-files" aria-label="Permalink to &quot;Extracting Chat Data from Media Files&quot;">​</a></h2><h1 id="_1-extracting-from-dual-audio-track-video-audio-files-requires-separated-audio-tracks" tabindex="-1">1. Extracting from Dual-Audio Track Video/Audio Files (Requires Separated Audio Tracks) <a class="header-anchor" href="#_1-extracting-from-dual-audio-track-video-audio-files-requires-separated-audio-tracks" aria-label="Permalink to &quot;1. Extracting from Dual-Audio Track Video/Audio Files (Requires Separated Audio Tracks)&quot;">​</a></h1><h1 id="video-to-chatml-converter" tabindex="-1">Video to ChatML Converter <a class="header-anchor" href="#video-to-chatml-converter" aria-label="Permalink to &quot;Video to ChatML Converter&quot;">​</a></h1><p>Converts video files containing dual-track conversations into ChatML-format JSON files.</p><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">​</a></h2><ul><li>Supports various video formats (MKV, MP4, etc.)</li><li>Uses OpenAI Whisper for high-quality speech recognition</li><li>CUDA acceleration support (if available)</li><li>Automatically sorts dialogue by timestamp</li><li>Generates standard ChatML output</li></ul><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h2><h3 id="_1-install-dependencies" tabindex="-1">1. Install Dependencies <a class="header-anchor" href="#_1-install-dependencies" aria-label="Permalink to &quot;1. Install Dependencies&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Automatically install all dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start-vtc.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or install manually</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div><p><strong>Note</strong>: You also need to install ffmpeg:</p><ul><li>Windows: Download from <a href="https://ffmpeg.org" target="_blank" rel="noreferrer">https://ffmpeg.org</a> or use <code>choco install ffmpeg</code></li><li>Ubuntu: <code>sudo apt install ffmpeg</code></li><li>macOS: <code>brew install ffmpeg</code></li></ul><h3 id="_2-usage" tabindex="-1">2. Usage <a class="header-anchor" href="#_2-usage" aria-label="Permalink to &quot;2. Usage&quot;">​</a></h3><h4 id="interactive-mode-recommended-for-new-users" tabindex="-1">Interactive Mode (Recommended for New Users) <a class="header-anchor" href="#interactive-mode-recommended-for-new-users" aria-label="Permalink to &quot;Interactive Mode (Recommended for New Users)&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start-vtc.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span></span></code></pre></div><h4 id="direct-command-line-mode" tabindex="-1">Direct Command-Line Mode <a class="header-anchor" href="#direct-command-line-mode" aria-label="Permalink to &quot;Direct Command-Line Mode&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start-vtc.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> video.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base</span></span></code></pre></div><h4 id="using-the-main-program-directly" tabindex="-1">Using the Main Program Directly <a class="header-anchor" href="#using-the-main-program-directly" aria-label="Permalink to &quot;Using the Main Program Directly&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> video-to-chatml.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> video.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base</span></span></code></pre></div><h2 id="parameter-description" tabindex="-1">Parameter Description <a class="header-anchor" href="#parameter-description" aria-label="Permalink to &quot;Parameter Description&quot;">​</a></h2><ul><li><code>video</code>: Path to the input video file</li><li><code>-u, --user-track</code>: User audio track index (default: 0)</li><li><code>-a, --assistant-track</code>: Assistant audio track index (default: 1)</li><li><code>-o, --output</code>: Output ChatML file path</li><li><code>-m, --model</code>: Whisper model size (tiny/base/small/medium/large, default: base)</li></ul><h2 id="whisper-model-options" tabindex="-1">Whisper Model Options <a class="header-anchor" href="#whisper-model-options" aria-label="Permalink to &quot;Whisper Model Options&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Model</th><th>Parameters</th><th>RAM Usage</th><th>Speed</th><th>Accuracy</th></tr></thead><tbody><tr><td>tiny</td><td>39M</td><td>~1GB</td><td>Fastest</td><td>Lowest</td></tr><tr><td>base</td><td>74M</td><td>~1GB</td><td>Fast</td><td>Low</td></tr><tr><td>small</td><td>244M</td><td>~2GB</td><td>Medium</td><td>Medium</td></tr><tr><td>medium</td><td>769M</td><td>~5GB</td><td>Slow</td><td>High</td></tr><tr><td>large</td><td>1550M</td><td>~10GB</td><td>Slowest</td><td>Highest</td></tr></tbody></table><h2 id="output-format" tabindex="-1">Output Format <a class="header-anchor" href="#output-format" aria-label="Permalink to &quot;Output Format&quot;">​</a></h2><p>The generated ChatML file format looks like this:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;User&#39;s spoken content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;timestamp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;end&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;assistant&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Assistant&#39;s response&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;timestamp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;end&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="frequently-asked-questions" tabindex="-1">Frequently Asked Questions <a class="header-anchor" href="#frequently-asked-questions" aria-label="Permalink to &quot;Frequently Asked Questions&quot;">​</a></h2><h3 id="_1-cuda-support" tabindex="-1">1. CUDA Support <a class="header-anchor" href="#_1-cuda-support" aria-label="Permalink to &quot;1. CUDA Support&quot;">​</a></h3><p>If you have an NVIDIA GPU, the program will automatically use CUDA acceleration. Check CUDA support:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start-vtc.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --check</span></span></code></pre></div><h3 id="_2-identifying-audio-tracks" tabindex="-1">2. Identifying Audio Tracks <a class="header-anchor" href="#_2-identifying-audio-tracks" aria-label="Permalink to &quot;2. Identifying Audio Tracks&quot;">​</a></h3><p>Use interactive mode to view all audio tracks in the video, which helps select the correct track index.</p><h3 id="_3-out-of-memory" tabindex="-1">3. Out of Memory <a class="header-anchor" href="#_3-out-of-memory" aria-label="Permalink to &quot;3. Out of Memory&quot;">​</a></h3><p>If you run into memory issues, try using a smaller Whisper model (e.g., <code>tiny</code> or <code>base</code>).</p><h2 id="dependencies" tabindex="-1">Dependencies <a class="header-anchor" href="#dependencies" aria-label="Permalink to &quot;Dependencies&quot;">​</a></h2><ul><li>Python 3.7+</li><li>openai-whisper</li><li>torch</li><li>ffmpeg-python</li><li>ffmpeg (system dependency)</li></ul><h2 id="supported-formats" tabindex="-1">Supported Formats <a class="header-anchor" href="#supported-formats" aria-label="Permalink to &quot;Supported Formats&quot;">​</a></h2><p><strong>Video formats</strong>: MP4, MKV, AVI, MOV, WMV, and other ffmpeg-supported formats <strong>Audio codecs</strong>: Most common codecs (AAC, MP3, WAV, etc.)</p><h1 id="_2-todo-automatically-detect-and-extract-from-single-track-video-audio-files-not-implemented-yet" tabindex="-1">2. [TODO] Automatically Detect and Extract from Single-Track Video/Audio Files (Not Implemented Yet) <a class="header-anchor" href="#_2-todo-automatically-detect-and-extract-from-single-track-video-audio-files-not-implemented-yet" aria-label="Permalink to &quot;2. \\[TODO] Automatically Detect and Extract from Single-Track Video/Audio Files (Not Implemented Yet)&quot;">​</a></h1>`,38)]))}const u=i(n,[["render",l]]);export{c as __pageData,u as default};
