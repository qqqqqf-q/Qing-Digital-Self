import{_ as e,c as s,o as a,ae as i}from"./chunks/framework.DUP9kEI5.js";const k=JSON.parse('{"title":"Configure the Environment","description":"","frontmatter":{},"headers":[],"relativePath":"en/guide/fine-tune-model.md","filePath":"en/guide/fine-tune-model.md"}'),d={name:"en/guide/fine-tune-model.md"};function o(n,t,l,r,h,c){return a(),s("div",null,t[0]||(t[0]=[i(`<h2 id="fine-tuning-the-model" tabindex="-1">Fine-tuning the Model <a class="header-anchor" href="#fine-tuning-the-model" aria-label="Permalink to &quot;Fine-tuning the Model&quot;">​</a></h2><blockquote><p>It is recommended to use a CPU with high single-core performance for fine-tuning. Otherwise, there may be a CPU bottleneck (cause not yet identified — PRs to fix are welcome).</p></blockquote><h2 id="before-you-begin-—-environment-setup" tabindex="-1">Before You Begin — Environment Setup <a class="header-anchor" href="#before-you-begin-—-environment-setup" aria-label="Permalink to &quot;Before You Begin — Environment Setup&quot;">​</a></h2><blockquote><p>It&#39;s simple, don&#39;t worry.</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/qqqqqf-q/Qing-Digital-Self.git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --depth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre></div><p>Or use a mirror (China mainland acceleration):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://hk.gh-proxy.com/https://github.com/qqqqqf-q/Qing-Digital-Self.git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --depth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre></div><h1 id="configure-the-environment" tabindex="-1">Configure the Environment <a class="header-anchor" href="#configure-the-environment" aria-label="Permalink to &quot;Configure the Environment&quot;">​</a></h1><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> environment/setup_env.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span></code></pre></div><p>Just follow the default process. Installation includes built-in checks. You can also use:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> environment/setup_env.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --check</span></span></code></pre></div><p>To check the environment.</p><p>If you encounter issues with Unsloth installation, please install it manually. First run the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -qO-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/unslothai/unsloth/main/unsloth/_auto_install.py</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span></span></code></pre></div><p>It will output a pip command — copy it and run it in your shell. For example:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --upgrade</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;unsloth[cu126-ampere-torch270] @ git+https://github.com/unslothai/unsloth.git&quot;</span></span></code></pre></div><p>If you encounter issues with flash attention installation, You can try visiting <a href="https://github.com/Dao-AILab/flash-attention/releases/" target="_blank" rel="noreferrer">this GitHub repository</a> To find the offline installation package you need (this doesn&#39;t require compilation and will be much faster). Commands are similar to:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/Dao-AILab/flash-attention/releases/download/v2.8.3/flash_attn-2.8.3+cu12torch2.4cxx11abiTRUE-cp312-cp312-linux_x86_64.whl&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pip install flash_attn-2.8.3+cu12torch2.4cxx11abiTRUE-cp312-cp312-linux_x86_64.whl</span></span></code></pre></div><hr><h1 id="now-the-actual-fine-tuning" tabindex="-1">Now the Actual Fine-tuning <a class="header-anchor" href="#now-the-actual-fine-tuning" aria-label="Permalink to &quot;Now the Actual Fine-tuning&quot;">​</a></h1><blockquote><p>Parameters can actually be left empty during testing, as defaults are provided. By default, it seems to use 8-bit quantization (this needs modification).</p></blockquote><p>Run the fine-tuning script:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run_finetune.py</span></span></code></pre></div><h3 id="model-related-parameters-4-columns-scroll-to-view-all" tabindex="-1">Model-related Parameters (4 columns, scroll to view all) <a class="header-anchor" href="#model-related-parameters-4-columns-scroll-to-view-all" aria-label="Permalink to &quot;Model-related Parameters (4 columns, scroll to view all)&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Parameter Name</th><th>Type</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td><code>--repo_id</code></td><td>str</td><td><code>&#39;Qwen/Qwen3-30B-A3B-Instruct-2507&#39;</code></td><td>HF repository ID</td></tr><tr><td><code>--local_dir</code></td><td>str</td><td><code>&#39;qwen3-30b-a3b-instruct&#39;</code></td><td>Local model directory</td></tr><tr><td><code>--use_unsloth</code></td><td>str</td><td><code>&#39;false&#39;</code></td><td>Whether to use Unsloth</td></tr><tr><td><code>--use_qlora</code></td><td>str</td><td><code>&#39;true&#39;</code></td><td>Whether to use QLoRA</td></tr><tr><td><code>--data_path</code></td><td>str</td><td><code>&#39;training_data.jsonl&#39;</code></td><td>Training data path</td></tr><tr><td><code>--eval_data_path</code></td><td>str</td><td><code>None</code></td><td>Evaluation data path</td></tr><tr><td><code>--max_samples</code></td><td>str</td><td><code>None</code></td><td>Maximum number of training samples</td></tr><tr><td><code>--max_eval_samples</code></td><td>str</td><td><code>None</code></td><td>Maximum number of evaluation samples</td></tr><tr><td><code>--model_max_length</code></td><td>str</td><td><code>&#39;2048&#39;</code></td><td>Maximum sequence length</td></tr><tr><td><code>--output_dir</code></td><td>str</td><td><code>&#39;finetune/models/qwen3-30b-a3b-qlora&#39;</code></td><td>Output directory</td></tr><tr><td><code>--seed</code></td><td>str</td><td><code>&#39;42&#39;</code></td><td>Random seed</td></tr><tr><td><code>--per_device_train_batch_size</code></td><td>str</td><td><code>&#39;1&#39;</code></td><td>Per-device training batch size</td></tr><tr><td><code>--per_device_eval_batch_size</code></td><td>str</td><td><code>&#39;1&#39;</code></td><td>Per-device evaluation batch size</td></tr><tr><td><code>--gradient_accumulation_steps</code></td><td>str</td><td><code>&#39;16&#39;</code></td><td>Gradient accumulation steps</td></tr><tr><td><code>--learning_rate</code></td><td>str</td><td><code>&#39;2e-4&#39;</code></td><td>Learning rate</td></tr><tr><td><code>--num_train_epochs</code></td><td>str</td><td><code>&#39;3&#39;</code></td><td>Number of training epochs</td></tr><tr><td><code>--max_steps</code></td><td>str</td><td><code>&#39;-1&#39;</code></td><td>Maximum steps (-1 means unlimited)</td></tr><tr><td><code>--lora_r</code></td><td>str</td><td><code>&#39;16&#39;</code></td><td>LoRA rank</td></tr><tr><td><code>--lora_alpha</code></td><td>str</td><td><code>&#39;32&#39;</code></td><td>LoRA alpha</td></tr><tr><td><code>--lora_dropout</code></td><td>str</td><td><code>&#39;0.05&#39;</code></td><td>LoRA dropout rate</td></tr><tr><td><code>--target_modules</code></td><td>str</td><td><code>&#39;too long, check file&#39;</code></td><td>LoRA target modules</td></tr><tr><td><code>--weight_decay</code></td><td>str</td><td><code>&#39;0.0&#39;</code></td><td>Weight decay</td></tr><tr><td><code>--moe_enable</code></td><td>str</td><td><code>&#39;false&#39;</code></td><td>Whether to enable MoE injection logic</td></tr><tr><td><code>--moe_lora_scope</code></td><td>str</td><td><code>&#39;expert_only&#39;</code></td><td>LoRA injection scope</td></tr><tr><td><code>--moe_expert_patterns</code></td><td>str</td><td><code>&#39;too long to include here, check file&#39;</code></td><td>Expert linear layer patterns</td></tr><tr><td><code>--moe_router_patterns</code></td><td>str</td><td><code>&#39;markdown would parse it, check file&#39;</code></td><td>Router/gating linear layer patterns</td></tr><tr><td><code>--moe_max_experts_lora</code></td><td>str</td><td><code>&#39;-1&#39;</code></td><td>Max number of LoRA experts per layer</td></tr><tr><td><code>--moe_dry_run</code></td><td>str</td><td><code>&#39;false&#39;</code></td><td>Whether to do a dry run only</td></tr><tr><td><code>--load_precision</code></td><td>str</td><td><code>&#39;fp16&#39;</code></td><td>Model load precision: <code>int8</code> / <code>int4</code> / <code>fp16</code></td></tr><tr><td><code>--logging_steps</code></td><td>str</td><td><code>&#39;1&#39;</code></td><td>Logging interval (steps)</td></tr><tr><td><code>--eval_steps</code></td><td>str</td><td><code>&#39;50&#39;</code></td><td>Evaluation interval (steps)</td></tr><tr><td><code>--save_steps</code></td><td>str</td><td><code>&#39;200&#39;</code></td><td>Model save interval (steps)</td></tr><tr><td><code>--save_total_limit</code></td><td>str</td><td><code>&#39;2&#39;</code></td><td>Maximum number of saved models</td></tr><tr><td><code>--warmup_ratio</code></td><td>str</td><td><code>&#39;0.05&#39;</code></td><td>Learning rate warmup ratio</td></tr><tr><td><code>--lr_scheduler_type</code></td><td>str</td><td><code>&#39;cosine&#39;</code></td><td>Learning rate scheduler type</td></tr><tr><td><code>--resume_from_checkpoint</code></td><td>str</td><td><code>None</code></td><td>Path to resume training from checkpoint</td></tr><tr><td><code>--no-gradient_checkpointing</code></td><td>flag</td><td><code>False</code></td><td>Disable gradient checkpointing (enable by adding this flag)</td></tr><tr><td><code>--no-merge_and_save</code></td><td>flag</td><td><code>False</code></td><td>Do not merge and save model (enable by adding this flag)</td></tr><tr><td><code>--fp16</code></td><td>str</td><td><code>&#39;true&#39;</code></td><td>Whether to use fp16</td></tr><tr><td><code>--optim</code></td><td>str</td><td><code>&#39;adamw_torch_fused&#39;</code></td><td>Optimizer name</td></tr><tr><td><code>--dataloader_pin_memory</code></td><td>str</td><td><code>&#39;false&#39;</code></td><td>Whether to pin DataLoader memory</td></tr><tr><td><code>--dataloader_num_workers</code></td><td>str</td><td><code>&#39;0&#39;</code></td><td>Number of DataLoader workers</td></tr><tr><td><code>--dataloader_prefetch_factor</code></td><td>str</td><td><code>&#39;2&#39;</code></td><td>DataLoader prefetch factor</td></tr><tr><td><code>--use_flash_attention_2</code></td><td>str</td><td><code>&#39;false&#39;</code></td><td>Use FlashAttention2 (not effective for Unsloth) (enable by adding this flag)</td></tr></tbody></table><hr><blockquote><p>The parameters are still quite complex — it’s best to consult an AI for help. Below is an example of fine-tuning <code>qwen2.5-7b-instruct</code> on an RTX 4090:</p></blockquote><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run_finetune.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --output_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/autodl-fs/qwen2.5-7b-qing-v1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --local_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./model/Qwen2.5-7B-Instruct</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --data_path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./dataset/sft.jsonl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --use_qlora</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --lora_dropout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --num_train_epochs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --per_device_train_batch_size</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --per_device_eval_batch_size</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --gradient_accumulation_steps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --learning_rate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2e-5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --lr_scheduler</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cosine</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --logging_steps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --eval_steps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save_steps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --warmup_ratio</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.05</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dataloader_num_workers</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --fp16</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --use_unsloth</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --no-gradient_checkpointing</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --load_precision</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> int8</span></span></code></pre></div><h3 id="evaluation-set-not-working" tabindex="-1">Evaluation Set Not Working <a class="header-anchor" href="#evaluation-set-not-working" aria-label="Permalink to &quot;Evaluation Set Not Working&quot;">​</a></h3><ul><li>Check that <code>--eval_data_path</code> is correct.</li><li>Ensure evaluation data format matches training data.</li><li>Look for console output saying “no evaluation data path provided”.</li></ul><h3 id="gpu-out-of-memory" tabindex="-1">GPU Out of Memory <a class="header-anchor" href="#gpu-out-of-memory" aria-label="Permalink to &quot;GPU Out of Memory&quot;">​</a></h3><ul><li>Reduce <code>--per_device_eval_batch_size</code>.</li><li>Reduce <code>--max_eval_samples</code>.</li><li>Increase the <code>--eval_steps</code> interval.</li></ul><h3 id="dev-notes" tabindex="-1">Dev Notes <a class="header-anchor" href="#dev-notes" aria-label="Permalink to &quot;Dev Notes&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cli.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> train</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><p>This parameter still seems unusable, with many bugs that need fixing.</p>`,35)]))}const u=e(d,[["render",o]]);export{k as __pageData,u as default};
