import{_ as s,c as i,o as t,ae as e}from"./chunks/framework.DUP9kEI5.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"guide/prepare-data.md","filePath":"guide/prepare-data.md"}'),l={name:"guide/prepare-data.md"};function n(h,a,p,r,o,d){return t(),i("div",null,a[0]||(a[0]=[e(`<h2 id="获取-qq-聊天数据" tabindex="-1">获取 QQ 聊天数据 <a class="header-anchor" href="#获取-qq-聊天数据" aria-label="Permalink to &quot;获取 QQ 聊天数据&quot;">​</a></h2><ul><li>教程请参考：<a href="https://qq.sbcnm.top/decrypt/NTQQ%20%28Windows%29.html" target="_blank" rel="noreferrer">NTQQ Windows 数据解密</a></li><li>补充资料：<a href="https://qq.sbcnm.top/decrypt/decode_db.html" target="_blank" rel="noreferrer">数据库解码参考</a></li><li>上面这两个是同一个教程的不同章节,耐心看完就好,不复杂(如果不会可以翻到最底下找我哦)</li><li>使用 DB Browser for SQLite，密码填写你获取到的 16 位密钥</li><li>HMAC 算法一般为SHA1，也有人是SHA512和256,自行测试,算法错误了会打不开数据库（所以需要测试到打开为之,也可以用 AI 帮你适配）</li><li>在 DB Browser 里<strong>导出 <code>c2c_msg_table</code> 的 SQL</strong></li><li>新建数据库，<strong>导入刚才导出的 SQL 文件</strong></li><li>获得一个这样的数据库</li><li>结构如下图,是明文数据库(你能打开并且能看到数据就是正常的)</li><li>将数据库重命名为 <code>qq.db</code>并放在<code>dataset/original</code>文件夹下</li></ul><blockquote><p>或修改<code>setting.jsonc</code>中的<code>qq_db_path</code></p></blockquote><ul><li><img src="https://cdn.nodeimage.com/i/oBfbWfVLhJI0CeZHTwwxq6G7XGO40Vy4.webp" alt="数据库图片"></li></ul><hr><h2 id="获取telegram-tg-聊天数据" tabindex="-1">获取Telegram(TG)聊天数据 <a class="header-anchor" href="#获取telegram-tg-聊天数据" aria-label="Permalink to &quot;获取Telegram(TG)聊天数据&quot;">​</a></h2><ul><li><p>请使用<a href="https://desktop.telegram.org/" target="_blank" rel="noreferrer">Telegram Desktop</a>导出聊天数据</p></li><li><p>点击<code>Export chat history</code>按钮 <img src="https://cdn.nodeimage.com/i/8PmL1yOyWbk1tTUkoLSk14sqrXN1HhYS.png" alt="8PmL1yOyWbk1tTUkoLSk14sqrXN1HhYS.png"></p></li><li><p>选择<code>JSON(Machine-readable JSON)</code>按钮</p></li><li><p>不必勾选其他按钮,因为此项目暂不支持多模态 <img src="https://cdn.nodeimage.com/i/ZOx12BovPbYXo89k4xIF9yRlEamneq4g.png" alt="ZOx12BovPbYXo89k4xIF9yRlEamneq4g.png"></p></li><li><p>将<code>导出文件夹下的**ChatExport_**文件夹全部移至</code>dataset/original/\`文件夹内,如下图所示 <img src="https://cdn.nodeimage.com/i/zbc3iDHiqJrIOtWwrHkzX7TMONYatB8G.png" alt="zbc3iDHiqJrIOtWwrHkzX7TMONYatB8G"></p></li><li><p><strong>重要</strong></p></li><li><p>修改<code>setting.jsonc</code>文件,将<code>telegram_chat_id</code>改为你的telegram聊天id</p></li></ul><blockquote><p><strong>包含空格!!!</strong></p></blockquote><ul><li>比如以下ID需要填写的是<code>qqqqq f</code></li></ul><h2 id="获取微信-wx-聊天数据" tabindex="-1">获取微信(WX)聊天数据 <a class="header-anchor" href="#获取微信-wx-聊天数据" aria-label="Permalink to &quot;获取微信(WX)聊天数据&quot;">​</a></h2><ul><li><p>前往<a href="https://github.com/SuxueCode/WechatBakTool" target="_blank" rel="noreferrer">WeChatBakTool的Github项目</a>并且去release下载最新版</p></li><li><p>或点此下载<a href="https://github.com/SuxueCode/WechatBakTool/releases/download/v0.9.7.6/WechatBakTool.zip" target="_blank" rel="noreferrer">WechatBakTool</a></p></li><li><p>前往<a href="https://github.com/tom-snow/wechat-windows-versions/releases" target="_blank" rel="noreferrer">此项目</a>下载老版本微信(v3.9.12.15)</p></li><li><p>或点此链接快速下载<a href="https://github.com/tom-snow/wechat-windows-versions/releases/download/v3.9.12.15/WeChatSetup-3.9.12.15.exe" target="_blank" rel="noreferrer">微信</a></p></li><li><p>安装微信并登录</p></li><li><p>手机打开<code>设置-聊天-聊天记录迁移与备份-迁移-迁移至电脑微信</code>并继续</p></li><li><p>解压baktool</p></li><li><p>0.安装.NET Desktop Runtime(注意是6.0版本的Desktop Runtime，如已经安装忽略)</p></li><li><p>1.打开微信，并登录。</p></li><li><p>2.在软件左侧下方点击新建工作区，</p></li><li><p>3.在新建工作区界面，选择要创建工作区的微信进程，并确认下方微信号是否正确</p></li><li><p>4.解密方式推荐选择用户名推断查找！该方式理论支持所有64位版本微信。但该模式需要确保微信账号正确</p></li><li><p>5.新手请忽略其他选项，直接点击创建工作区，程序会自动进行工作区创建、解密。</p></li><li><p>右键<code>工作区</code>-<code>管理</code>,导出好友聊天,全部</p></li><li><p>将前往<code>baktool</code>的文件夹,进入<code>workspace-[随机名文件夹]-DecDB</code></p></li><li><p>找到所有<code>MSG*.db</code>的文件,例如<code>MSG1.db</code>,全部移动至<code>dataset/original/wechat</code>文件夹内 <img src="https://cdn.nodeimage.com/i/TRbknJP4C4KkBsfTKBUN3CXJPPVagMaP.png" alt="TRbknJP4C4KkBsfTKBUN3CXJPPVagMaP"></p></li></ul><h2 id="可选-从视频-音频文件中获取聊天数据" tabindex="-1">(可选) 从视频/音频文件中获取聊天数据&#39; <a class="header-anchor" href="#可选-从视频-音频文件中获取聊天数据" aria-label="Permalink to &quot;(可选) 从视频/音频文件中获取聊天数据&#39;&quot;">​</a></h2><ul><li>从双音轨的视频/音频中提取(需要有音轨分离的文件)</li></ul><h3 id="_1-安装依赖" tabindex="-1">1. 安装依赖 <a class="header-anchor" href="#_1-安装依赖" aria-label="Permalink to &quot;1. 安装依赖&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自动安装所有依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> process_data/chat_parser/video-to-chatml/start-vtc.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或手动安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div><p><strong>注意</strong>: 还需要安装ffmpeg:</p><ul><li>Windows: 从 <a href="https://ffmpeg.org" target="_blank" rel="noreferrer">https://ffmpeg.org</a> 下载或使用 <code>choco install ffmpeg</code></li><li>Ubuntu: <code>sudo apt install ffmpeg</code></li><li>macOS: <code>brew install ffmpeg</code></li></ul><h3 id="_2-使用方法" tabindex="-1">2. 使用方法 <a class="header-anchor" href="#_2-使用方法" aria-label="Permalink to &quot;2. 使用方法&quot;">​</a></h3><h4 id="交互式模式-推荐新用户" tabindex="-1">交互式模式（推荐新用户） <a class="header-anchor" href="#交互式模式-推荐新用户" aria-label="Permalink to &quot;交互式模式（推荐新用户）&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> process_data/chat_parser/video-to-chatml/start-vtc.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span></span></code></pre></div><h4 id="直接命令行模式" tabindex="-1">直接命令行模式 <a class="header-anchor" href="#直接命令行模式" aria-label="Permalink to &quot;直接命令行模式&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> process_data/chat_parser/video-to-chatml/start-vtc.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> video.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base</span></span></code></pre></div><h4 id="使用主程序" tabindex="-1">使用主程序 <a class="header-anchor" href="#使用主程序" aria-label="Permalink to &quot;使用主程序&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> process_data/chat_parser/video-to-chatml/video-to-chatml.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> video.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base</span></span></code></pre></div><h3 id="参数说明" tabindex="-1">参数说明 <a class="header-anchor" href="#参数说明" aria-label="Permalink to &quot;参数说明&quot;">​</a></h3><ul><li><code>video</code>: 输入视频文件路径</li><li><code>-u, --user-track</code>: 用户音轨索引（默认: 0）</li><li><code>-a, --assistant-track</code>: 助手音轨索引（默认: 1）</li><li><code>-o, --output</code>: 输出的ChatML文件路径</li><li><code>-m, --model</code>: Whisper模型大小（tiny/base/small/medium/large，默认: base）</li></ul><h3 id="whisper模型选择" tabindex="-1">Whisper模型选择 <a class="header-anchor" href="#whisper模型选择" aria-label="Permalink to &quot;Whisper模型选择&quot;">​</a></h3><table tabindex="0"><thead><tr><th>模型</th><th>参数量</th><th>内存占用</th><th>速度</th><th>精度</th></tr></thead><tbody><tr><td>tiny</td><td>39M</td><td>~1GB</td><td>最快</td><td>最低</td></tr><tr><td>base</td><td>74M</td><td>~1GB</td><td>快</td><td>低</td></tr><tr><td>small</td><td>244M</td><td>~2GB</td><td>中等</td><td>中等</td></tr><tr><td>medium</td><td>769M</td><td>~5GB</td><td>慢</td><td>高</td></tr><tr><td>large</td><td>1550M</td><td>~10GB</td><td>最慢</td><td>最高</td></tr></tbody></table><h3 id="输出格式" tabindex="-1">输出格式 <a class="header-anchor" href="#输出格式" aria-label="Permalink to &quot;输出格式&quot;">​</a></h3><p>生成的ChatML文件格式如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;用户说的话&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;timestamp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;end&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;assistant&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;助手回复的话&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;timestamp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;end&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h3><h3 id="_1-cuda支持" tabindex="-1">1. CUDA支持 <a class="header-anchor" href="#_1-cuda支持" aria-label="Permalink to &quot;1. CUDA支持&quot;">​</a></h3><p>如果有NVIDIA GPU，程序会自动使用CUDA加速。检查CUDA支持：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> process_data/chat_parser/video-to-chatml/start-vtc.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --check</span></span></code></pre></div><h3 id="_2-音轨识别" tabindex="-1">2. 音轨识别 <a class="header-anchor" href="#_2-音轨识别" aria-label="Permalink to &quot;2. 音轨识别&quot;">​</a></h3><p>使用交互式模式可以查看视频的所有音轨信息，帮助选择正确的音轨索引。</p><h3 id="_3-内存不足" tabindex="-1">3. 内存不足 <a class="header-anchor" href="#_3-内存不足" aria-label="Permalink to &quot;3. 内存不足&quot;">​</a></h3><p>如果遇到内存不足，尝试使用更小的Whisper模型（如tiny或base）。</p><h3 id="依赖项" tabindex="-1">依赖项 <a class="header-anchor" href="#依赖项" aria-label="Permalink to &quot;依赖项&quot;">​</a></h3><ul><li>Python 3.7+</li><li>openai-whisper</li><li>torch</li><li>ffmpeg-python</li><li>ffmpeg (系统依赖)</li></ul><h3 id="支持的格式" tabindex="-1">支持的格式 <a class="header-anchor" href="#支持的格式" aria-label="Permalink to &quot;支持的格式&quot;">​</a></h3><p><strong>视频格式</strong>: MP4, MKV, AVI, MOV, WMV等ffmpeg支持的格式 <strong>音频编码</strong>: 大部分常见音频编码（AAC, MP3, WAV等）</p><h3 id="_2-todo-从单音轨的视频-音频中自动识别并提取-暂时没写" tabindex="-1">2.[TODO]从单音轨的视频/音频中自动识别并提取(暂时没写) <a class="header-anchor" href="#_2-todo-从单音轨的视频-音频中自动识别并提取-暂时没写" aria-label="Permalink to &quot;2.[TODO]从单音轨的视频/音频中自动识别并提取(暂时没写)&quot;">​</a></h3>`,44)]))}const g=s(l,[["render",n]]);export{c as __pageData,g as default};
