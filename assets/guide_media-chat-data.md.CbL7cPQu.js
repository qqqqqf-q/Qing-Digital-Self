import{_ as a,c as i,o as t,ae as h}from"./chunks/framework.DUP9kEI5.js";const c=JSON.parse('{"title":"1.从双音轨的视频/音频中提取(需要有音轨分离的文件)","description":"","frontmatter":{},"headers":[],"relativePath":"guide/media-chat-data.md","filePath":"guide/media-chat-data.md"}'),e={name:"guide/media-chat-data.md"};function l(n,s,p,d,k,r){return t(),i("div",null,s[0]||(s[0]=[h(`<h2 id="从媒体文件中获取聊天数据" tabindex="-1">从媒体文件中获取聊天数据 <a class="header-anchor" href="#从媒体文件中获取聊天数据" aria-label="Permalink to &quot;从媒体文件中获取聊天数据&quot;">​</a></h2><h1 id="_1-从双音轨的视频-音频中提取-需要有音轨分离的文件" tabindex="-1">1.从双音轨的视频/音频中提取(需要有音轨分离的文件) <a class="header-anchor" href="#_1-从双音轨的视频-音频中提取-需要有音轨分离的文件" aria-label="Permalink to &quot;1.从双音轨的视频/音频中提取(需要有音轨分离的文件)&quot;">​</a></h1><h1 id="video-to-chatml-转换器" tabindex="-1">Video to ChatML 转换器 <a class="header-anchor" href="#video-to-chatml-转换器" aria-label="Permalink to &quot;Video to ChatML 转换器&quot;">​</a></h1><p>将包含双音轨对话的视频文件转换为ChatML格式的JSON文件。</p><h2 id="功能特性" tabindex="-1">功能特性 <a class="header-anchor" href="#功能特性" aria-label="Permalink to &quot;功能特性&quot;">​</a></h2><ul><li>支持多种视频格式（MKV、MP4等）</li><li>使用OpenAI Whisper进行高质量语音识别</li><li>支持CUDA加速（如果可用）</li><li>自动按时间戳排序对话</li><li>生成标准ChatML格式输出</li></ul><h2 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h2><h3 id="_1-安装依赖" tabindex="-1">1. 安装依赖 <a class="header-anchor" href="#_1-安装依赖" aria-label="Permalink to &quot;1. 安装依赖&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自动安装所有依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start-vtc.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或手动安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div><p><strong>注意</strong>: 还需要安装ffmpeg:</p><ul><li>Windows: 从 <a href="https://ffmpeg.org" target="_blank" rel="noreferrer">https://ffmpeg.org</a> 下载或使用 <code>choco install ffmpeg</code></li><li>Ubuntu: <code>sudo apt install ffmpeg</code></li><li>macOS: <code>brew install ffmpeg</code></li></ul><h3 id="_2-使用方法" tabindex="-1">2. 使用方法 <a class="header-anchor" href="#_2-使用方法" aria-label="Permalink to &quot;2. 使用方法&quot;">​</a></h3><h4 id="交互式模式-推荐新用户" tabindex="-1">交互式模式（推荐新用户） <a class="header-anchor" href="#交互式模式-推荐新用户" aria-label="Permalink to &quot;交互式模式（推荐新用户）&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start-vtc.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span></span></code></pre></div><h4 id="直接命令行模式" tabindex="-1">直接命令行模式 <a class="header-anchor" href="#直接命令行模式" aria-label="Permalink to &quot;直接命令行模式&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start-vtc.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> video.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base</span></span></code></pre></div><h4 id="使用主程序" tabindex="-1">使用主程序 <a class="header-anchor" href="#使用主程序" aria-label="Permalink to &quot;使用主程序&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> video-to-chatml.py</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> video.mp4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.json</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> base</span></span></code></pre></div><h2 id="参数说明" tabindex="-1">参数说明 <a class="header-anchor" href="#参数说明" aria-label="Permalink to &quot;参数说明&quot;">​</a></h2><ul><li><code>video</code>: 输入视频文件路径</li><li><code>-u, --user-track</code>: 用户音轨索引（默认: 0）</li><li><code>-a, --assistant-track</code>: 助手音轨索引（默认: 1）</li><li><code>-o, --output</code>: 输出的ChatML文件路径</li><li><code>-m, --model</code>: Whisper模型大小（tiny/base/small/medium/large，默认: base）</li></ul><h2 id="whisper模型选择" tabindex="-1">Whisper模型选择 <a class="header-anchor" href="#whisper模型选择" aria-label="Permalink to &quot;Whisper模型选择&quot;">​</a></h2><table tabindex="0"><thead><tr><th>模型</th><th>参数量</th><th>内存占用</th><th>速度</th><th>精度</th></tr></thead><tbody><tr><td>tiny</td><td>39M</td><td>~1GB</td><td>最快</td><td>最低</td></tr><tr><td>base</td><td>74M</td><td>~1GB</td><td>快</td><td>低</td></tr><tr><td>small</td><td>244M</td><td>~2GB</td><td>中等</td><td>中等</td></tr><tr><td>medium</td><td>769M</td><td>~5GB</td><td>慢</td><td>高</td></tr><tr><td>large</td><td>1550M</td><td>~10GB</td><td>最慢</td><td>最高</td></tr></tbody></table><h2 id="输出格式" tabindex="-1">输出格式 <a class="header-anchor" href="#输出格式" aria-label="Permalink to &quot;输出格式&quot;">​</a></h2><p>生成的ChatML文件格式如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;用户说的话&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;timestamp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;end&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.5</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;role&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;assistant&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;助手回复的话&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;timestamp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;start&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;end&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="_1-cuda支持" tabindex="-1">1. CUDA支持 <a class="header-anchor" href="#_1-cuda支持" aria-label="Permalink to &quot;1. CUDA支持&quot;">​</a></h3><p>如果有NVIDIA GPU，程序会自动使用CUDA加速。检查CUDA支持：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start-vtc.py</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --check</span></span></code></pre></div><h3 id="_2-音轨识别" tabindex="-1">2. 音轨识别 <a class="header-anchor" href="#_2-音轨识别" aria-label="Permalink to &quot;2. 音轨识别&quot;">​</a></h3><p>使用交互式模式可以查看视频的所有音轨信息，帮助选择正确的音轨索引。</p><h3 id="_3-内存不足" tabindex="-1">3. 内存不足 <a class="header-anchor" href="#_3-内存不足" aria-label="Permalink to &quot;3. 内存不足&quot;">​</a></h3><p>如果遇到内存不足，尝试使用更小的Whisper模型（如tiny或base）。</p><h2 id="依赖项" tabindex="-1">依赖项 <a class="header-anchor" href="#依赖项" aria-label="Permalink to &quot;依赖项&quot;">​</a></h2><ul><li>Python 3.7+</li><li>openai-whisper</li><li>torch</li><li>ffmpeg-python</li><li>ffmpeg (系统依赖)</li></ul><h2 id="支持的格式" tabindex="-1">支持的格式 <a class="header-anchor" href="#支持的格式" aria-label="Permalink to &quot;支持的格式&quot;">​</a></h2><p><strong>视频格式</strong>: MP4, MKV, AVI, MOV, WMV等ffmpeg支持的格式 <strong>音频编码</strong>: 大部分常见音频编码（AAC, MP3, WAV等）</p><h1 id="_2-todo-从单音轨的视频-音频中自动识别并提取-暂时没写" tabindex="-1">2.[TODO]从单音轨的视频/音频中自动识别并提取(暂时没写) <a class="header-anchor" href="#_2-todo-从单音轨的视频-音频中自动识别并提取-暂时没写" aria-label="Permalink to &quot;2.[TODO]从单音轨的视频/音频中自动识别并提取(暂时没写)&quot;">​</a></h1>`,38)]))}const g=a(e,[["render",l]]);export{c as __pageData,g as default};
